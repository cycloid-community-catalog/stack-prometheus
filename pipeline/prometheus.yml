shared:

  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

  # Task : connect on the bastion server and run ansible from it
  - &run-ansible-from-bastion
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: latest
      run:
        path: /usr/bin/ansible-runner
      caches:
        - path: ansible-playbook/roles
      inputs:
      - name: merged-stack
        path: ansible-playbook


groups:

- name: ((project))-((env))
  jobs:
  - terraform-plan-prometheus-((env))
  - terraform-apply-prometheus-((env))
  - deploy-prometheus-((env))

resource_types:

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:

- name: terraform-prometheus-((env))
  type: terraform
  source:
    storage:
      bucket: ((terraform_storage_bucket_name))
      bucket_path: ((terraform_storage_bucket_path))
      region_name: ((aws_default_region))
      access_key_id: ((terraform_storage_access_key))
      secret_access_key: ((terraform_storage_secret_key))
    vars:
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
      env: ((env))
      project: ((project))
      customer: ((customer))
      aws_region: ((aws_default_region))
    env:
      AWS_ACCESS_KEY_ID: ((aws_access_key))
      AWS_DEFAULT_REGION: ((aws_default_region))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

- name: stack-prometheus-ansible
  type: git
  source:
    uri: https://github.com/cycloid-community-catalog/stack-prometheus
    branch: ((prometheus_stack_git_branch))
    check_every: 2m
    path: /ansible/

- name: catalog-config-ansible
  type: git
  source:
    uri: ((prometheus_config_git_repository))
    branch: ((prometheus_config_git_branch))
    check_every: 2m
    private_key: ((prometheus_config_git_private_key))
    path: /ansible/

- name: stack-prometheus-terraform
  type: git
  source:
    uri: https://github.com/cycloid-community-catalog/stack-prometheus
    branch: ((prometheus_stack_git_branch))
    check_every: 2m
    path: /terraform/

- name: catalog-config-terraform
  type: git
  source:
    uri: ((prometheus_config_git_repository))
    branch: ((prometheus_config_git_branch))
    check_every: 2m
    private_key: ((prometheus_config_git_private_key))
    path: /terraform/


jobs:

  - name: terraform-plan-prometheus-((env))
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: stack-prometheus-terraform
          trigger: true
        - get: catalog-config-terraform
          trigger: true

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: catalog-config-terraform
              path: "config"
            - name: stack-prometheus-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((prometheus_config_terraform_path))
            STACK_PATH: terraform

        - put: terraform-prometheus-((env))
          params:
            env_name: prometheus-((env))
            plan_only: true
            terraform_source: merged-stack/

  - name: terraform-apply-prometheus-((env))
    build_logs_to_retain: 10
    plan:
      - do:
        # Get the PR on the project #
        - get: stack-prometheus-terraform
          trigger: false
          passed:
            - terraform-plan-prometheus-((env))

        - get: catalog-config-terraform
          trigger: false
          passed:
            - terraform-plan-prometheus-((env))

        - get: terraform-prometheus-((env))
          trigger: false
          passed:
            - terraform-plan-prometheus-((env))

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: catalog-config-terraform
              path: "config"
            - name: stack-prometheus-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((prometheus_config_terraform_path))
            STACK_PATH: terraform

        - put: terraform-prometheus-((env))
          params:
            env_name: prometheus-((env))
            run_plan: true
            terraform_source: merged-stack/


  - name: deploy-prometheus-((env))
    build_logs_to_retain: 10
    plan:
    - do:

      - get: terraform-prometheus-((env))
        trigger: true
        passed:
          - terraform-apply-prometheus-((env))

      - get: stack-prometheus-ansible
        trigger: true

      - get: catalog-config-ansible
        trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: catalog-config-ansible
            path: "config"
          - name: stack-prometheus-ansible
            path: "stack"
          - name: terraform-prometheus-((env))
            path: "terraform"
        params:
          CONFIG_PATH: ((prometheus_config_ansible_path))
          STACK_PATH: ansible

      - task: run-ansible
        <<: *run-ansible-from-bastion
        params:
          BASTION_URL: ((bastion_url))
          BASTION_PRIVATE_KEY: ((bastion_private_key_pair))
          ANSIBLE_VAULT_PASSWORD: ((ansible_vault_password))
          ANSIBLE_PLAYBOOK_PATH: ansible-playbook
          ANSIBLE_PLAYBOOK_NAME: prometheus.yml
          AWS_DEFAULT_REGION: ((aws_default_region))
          AWS_ACCESS_KEY_ID: ((aws_access_key))
          AWS_SECRET_ACCESS_KEY: ((aws_secret_key))
          FORCE_ANSIBLE_GALAXY: false
          EXTRA_VARS:
            env: ((env))
            project: ((project))
            customer: ((customer))

